plugins {
    id 'java'
    id 'java-library'
    id 'eclipse'
    id "org.sonarqube" version "3.3"
}


group 'org.diy.MobileAutomationFramework'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

java {
    withSourcesJar()
}


dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    implementation group: 'io.appium', name: 'java-client', version: '7.3.0'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    implementation group: 'org.testng', name: 'testng', version: '7.1.0'
    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.17.3'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.2'
    implementation group: 'com.github.automatedowl', name: 'allure-environment-writer', version: '1.0.0'
}

test {
    useTestNG() {
        useDefaultListeners = true
        outputDirectory = file("$projectDir/allure-report")
    }
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}


sourceSets {
    main {
        java {
            srcDir 'src'
            exclude '**/Test*.java'
        }
        resources {
            include '**/*.'
            include 'META-INF/services/**'
        }
    }
}

task FatJar(type: Jar) {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
    archiveFileName.set('all-in-one-jar')
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task printSourceSets {
    doLast {
        sourceSets.each {
            println(it)
            it.allSource.each {
                println(it)
            }
        }
    }
}